### Aliases
alias_cache:
  restore_cache: &restore_node_modules
    key: yarn-{{ arch }}-{{ checksum "yarn.lock" }}
  run: &install_node_modules
    name: Install node_modules
    command: yarn install --frozen-lockfiles
  save_cache: &save_node_modules
    key: yarn-{{ arch }}-{{ checksum "yarn.lock" }}
    paths:
      - ~/.cache/yarn
      - node_modules
      - sample/node_modules
      - packages/chat-react-hooks/node_modules
      - packages/uikit-react-native/node_modules
      - packages/uikit-react-native-core/node_modules
      - packages/uikit-react-native-foundation/node_modules
      - packages/uikit-utils/node_modules
alias_commands:
  run: &create_app_env
    name: Create env.ts
    command: echo "export const APP_ID = '${SENDBIRD_APP_ID}';" >> sample/src/env.ts

### Circle CI
# https://circleci.com/docs/2.0/env-vars/#built-in-environment-variables
# https://circleci.com/docs/2.0/testing-ios/#supported-xcode-versions
version: 2.1
orbs:
  ruby: circleci/ruby@1.6.0
parameters:
  platform:
    type: enum
    default: 'Noop'
    enum: ['All', 'iOS', 'Android', 'Noop']

jobs:
  deploy-ios:
    macos:
      xcode: 13.3.0
    resource_class: large
    steps:
      - checkout
      - run:
          name: Install gem
          working_directory: sample/ios
          command: bundle install
      - restore_cache: *restore_node_modules
      - run: *install_node_modules
      - save_cache: *save_node_modules
      - restore_cache:
          key: pods-{{ arch }}-{{ checksum "sample/ios/Podfile.lock" }}
      - run:
          name: Install pods
          working_directory: sample/ios
          command: pod install
      - save_cache:
          key: pods-{{ arch }}-{{ checksum "sample/ios/Podfile.lock" }}
          paths:
            - ios/Pods
      - run: *create_app_env
      - run:
          name: Expose environments
          command: |
            echo "export TEAM_ID=$FASTLANE_IOS_TEAM_ID" >> $BASH_ENV
            echo "export MATCH_PASSWORD=$FASTLANE_IOS_MATCH_PASSWORD" >> $BASH_ENV
            echo "export MATCH_GIT_URL=$FASTLANE_IOS_MATCH_GIT_URL" >> $BASH_ENV
            echo "export MATCH_GIT_BASIC_AUTHORIZATION=$FASTLANE_IOS_MATCH_GIT_BASIC_AUTHORIZATION" >> $BASH_ENV
            echo "export APPLE_ID=$FASTLANE_IOS_APPLE_ID" >> $BASH_ENV
            echo "export FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD=$FASTLANE_IOS_APPLE_APPLICATION_SPECIFIC_PASSWORD" >> $BASH_ENV
      - run:
          name: Run fastlane
          command: yarn deploy:ios

  deploy-android:
    docker:
      - image: cimg/android:2022.03-node
    resource_class: xlarge
    steps:
      - checkout
      - ruby/install:
          version: '2.7.5'
      - ruby/install-deps:
          app-dir: ./sample/android
      - restore_cache: *restore_node_modules
      - run: *install_node_modules
      - save_cache: *save_node_modules
      - run: *create_app_env
      - run:
          name: Create service-account.json
          working_directory: sample/android
          environment:
            - FILE_PATH: fastlane/service-account.json
          command: |
            echo "$FASTLANE_ANDROID_SERVICE_ACCOUNT" | base64 --decode >> $FILE_PATH
            echo "export GOOGLE_APPLICATION_CREDENTIALS=$CIRCLE_WORKING_DIRECTORY/$FILE_PATH" >> $BASH_ENV
            echo "export FIREBASEAPPDISTRO_APP=$FASTLANE_ANDROID_APP_ID" >> $BASH_ENV
      - run:
          name: Run fastlane
          command: yarn deploy:android

workflows:
  run-ios:
    when:
      or:
        - equal: [<< pipeline.parameters.platform >>, 'All']
        - equal: [<< pipeline.parameters.platform >>, 'iOS']
    jobs:
      - deploy-ios
  run-android:
    when:
      or:
        - equal: [<< pipeline.parameters.platform >>, 'All']
        - equal: [<< pipeline.parameters.platform >>, 'Android']
    jobs:
      - deploy-android
